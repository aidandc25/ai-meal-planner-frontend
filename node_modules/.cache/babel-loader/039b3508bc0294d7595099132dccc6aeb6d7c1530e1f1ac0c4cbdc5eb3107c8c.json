{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\OneDrive\\\\Documents\\\\Projects\\\\ai-meal-planner\\\\src\\\\components\\\\MealPlannerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEAL_STYLES = [\"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\", \"Paleo\", \"Mediterranean\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Whole30\"];\nconst MEAL_ORDER = [\"Breakfast\", \"Lunch\", \"Dinner\"];\nfunction MealPlannerForm() {\n  _s();\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({\n    days: [],\n    groceryList: {}\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    if (name === \"mealStyles\") {\n      setForm(prev => ({\n        ...prev,\n        mealStyles: checked ? [...prev.mealStyles, value] : prev.mealStyles.filter(v => v !== value)\n      }));\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const cleanLine = line => line.replace(/\\*+/g, '').replace(/：/g, ':').replace(/^[-•–]\\s*/, '').trim();\n  const parseMealPlan = text => {\n    const lines = text.split('\\n').map(cleanLine).filter(Boolean);\n    const days = [];\n    const groceryList = {};\n    let currentDay = null;\n    let currentMeal = null;\n    let currentGroceryCategory = '';\n    let inGrocery = false;\n    const dayRegex = /^Day\\s+\\d+:?/i;\n    const mealRegex = /^(Breakfast|Lunch|Dinner):/i;\n    for (let line of lines) {\n      if (dayRegex.test(line)) {\n        if (currentDay) days.push(currentDay);\n        currentDay = {\n          title: line.replace(':', ''),\n          meals: []\n        };\n        inGrocery = false;\n      } else if (mealRegex.test(line)) {\n        const [type, ...rest] = line.split(':');\n        currentMeal = {\n          type: type.trim(),\n          title: rest.join(':').trim(),\n          steps: []\n        };\n        if (currentDay) currentDay.meals.push(currentMeal);\n      } else if ((line.startsWith('-') || line.startsWith('•') || line.startsWith('–')) && currentMeal && !inGrocery) {\n        currentMeal.steps.push(cleanLine(line));\n      } else if (line.toLowerCase().includes('grocery list')) {\n        if (currentDay) days.push(currentDay);\n        currentDay = null;\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && (line.startsWith('-') || line.startsWith('•') || line.startsWith('–'))) {\n        const item = cleanLine(line);\n        if (!currentGroceryCategory) currentGroceryCategory = 'Uncategorized';\n        if (!groceryList[currentGroceryCategory]) groceryList[currentGroceryCategory] = [];\n        groceryList[currentGroceryCategory].push(item);\n      }\n    }\n    if (currentDay) days.push(currentDay);\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({\n      days: [],\n      groceryList: {}\n    });\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\n\nDietary preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFormat example:\nDay 1:\nBreakfast: [title]\n- Step 1\n- Step 2\n\nLunch: [title]\n- Step 1\n- Step 2\n\nDinner: [title]\n- Step 1\n- Step 2\n\nAlways include a \"Grocery List:\" at the end with sections like:\nProduce:\n- Apples\n- Spinach\n\nGrains:\n- Rice\nProtein:\n- Tofu\nSpices:\n- Paprika\nOther:\n- Almond milk\n\nMake sure bullet points are used for all steps and ingredients.\n`;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Could not connect to backend.\");\n    }\n    setLoading(false);\n  };\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Style Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px'\n          },\n          children: MEAL_STYLES.map(style => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"mealStyles\",\n              value: style,\n              checked: form.mealStyles.includes(style),\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), \" \", style]\n          }, style, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meal Planning Goal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"goal\",\n        value: form.goal,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"healthy\",\n          children: \"Eat healthier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"budget\",\n          children: \"Save time & money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"simple\",\n          children: \"Just plan meals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meals Per Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"mealsPerDay\",\n        min: \"1\",\n        max: \"3\",\n        value: form.mealsPerDay,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Plan Length (days):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"planLength\",\n        value: form.planLength,\n        onChange: handleChange,\n        children: [3, 5, 7].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Budget Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"budget\",\n        value: form.budget,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Allergies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"allergies\",\n        value: form.allergies,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), parsedPlan.days.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Meal Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), parsedPlan.days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '16px',\n          background: '#f9fafb',\n          borderRadius: '12px',\n          marginBottom: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: day.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), day.meals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [meal.type, \": \", meal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meal.steps.map((step, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), Object.keys(parsedPlan.groceryList).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#f3f4f6',\n          borderRadius: '12px',\n          padding: '16px'\n        },\n        children: Object.keys(parsedPlan.groceryList).map((category, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: parsedPlan.groceryList[category].map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 72\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"No grocery list was provided.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download as .txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlannerForm, \"LwuhZSCfYn9KrLKW+ypAz+sVI5s=\");\n_c = MealPlannerForm;\nexport default MealPlannerForm;\nvar _c;\n$RefreshReg$(_c, \"MealPlannerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MEAL_STYLES","MEAL_ORDER","MealPlannerForm","_s","form","setForm","mealStyles","goal","mealsPerDay","planLength","budget","allergies","loading","setLoading","mealPlan","setMealPlan","error","setError","parsedPlan","setParsedPlan","days","groceryList","handleChange","e","name","value","checked","target","prev","filter","v","cleanLine","line","replace","trim","parseMealPlan","text","lines","split","map","Boolean","currentDay","currentMeal","currentGroceryCategory","inGrocery","dayRegex","mealRegex","test","push","title","meals","type","rest","join","steps","startsWith","toLowerCase","includes","endsWith","item","slice","Number","handleSubmit","preventDefault","prompt","length","response","fetch","method","headers","body","JSON","stringify","data","json","result","parsed","err","console","handleDownload","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","onChange","min","max","num","color","marginTop","day","index","padding","background","borderRadius","marginBottom","meal","i","step","j","Object","keys","category","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aidan/OneDrive/Documents/Projects/ai-meal-planner/src/components/MealPlannerForm.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst MEAL_STYLES = [\n  \"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\",\n  \"Paleo\", \"Mediterranean\", \"High-Protein\",\n  \"Low-Carb\", \"Low-Fat\", \"Whole30\"\n];\n\nconst MEAL_ORDER = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\nfunction MealPlannerForm() {\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({ days: [], groceryList: {} });\n\n  const handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    if (name === \"mealStyles\") {\n      setForm((prev) => ({\n        ...prev,\n        mealStyles: checked\n          ? [...prev.mealStyles, value]\n          : prev.mealStyles.filter((v) => v !== value)\n      }));\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const cleanLine = (line) =>\n    line.replace(/\\*+/g, '').replace(/：/g, ':').replace(/^[-•–]\\s*/, '').trim();\n\n  const parseMealPlan = (text) => {\n    const lines = text.split('\\n').map(cleanLine).filter(Boolean);\n    const days = [];\n    const groceryList = {};\n\n    let currentDay = null;\n    let currentMeal = null;\n    let currentGroceryCategory = '';\n    let inGrocery = false;\n\n    const dayRegex = /^Day\\s+\\d+:?/i;\n    const mealRegex = /^(Breakfast|Lunch|Dinner):/i;\n\n    for (let line of lines) {\n      if (dayRegex.test(line)) {\n        if (currentDay) days.push(currentDay);\n        currentDay = { title: line.replace(':', ''), meals: [] };\n        inGrocery = false;\n      } else if (mealRegex.test(line)) {\n        const [type, ...rest] = line.split(':');\n        currentMeal = {\n          type: type.trim(),\n          title: rest.join(':').trim(),\n          steps: []\n        };\n        if (currentDay) currentDay.meals.push(currentMeal);\n      } else if ((line.startsWith('-') || line.startsWith('•') || line.startsWith('–')) && currentMeal && !inGrocery) {\n        currentMeal.steps.push(cleanLine(line));\n      } else if (line.toLowerCase().includes('grocery list')) {\n        if (currentDay) days.push(currentDay);\n        currentDay = null;\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && (line.startsWith('-') || line.startsWith('•') || line.startsWith('–'))) {\n        const item = cleanLine(line);\n        if (!currentGroceryCategory) currentGroceryCategory = 'Uncategorized';\n        if (!groceryList[currentGroceryCategory]) groceryList[currentGroceryCategory] = [];\n        groceryList[currentGroceryCategory].push(item);\n      }\n    }\n\n    if (currentDay) days.push(currentDay);\n\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({ days: [], groceryList: {} });\n\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\n\nDietary preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFormat example:\nDay 1:\nBreakfast: [title]\n- Step 1\n- Step 2\n\nLunch: [title]\n- Step 1\n- Step 2\n\nDinner: [title]\n- Step 1\n- Step 2\n\nAlways include a \"Grocery List:\" at the end with sections like:\nProduce:\n- Apples\n- Spinach\n\nGrains:\n- Rice\nProtein:\n- Tofu\nSpices:\n- Paprika\nOther:\n- Almond milk\n\nMake sure bullet points are used for all steps and ingredients.\n`;\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt })\n      });\n\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Could not connect to backend.\");\n    }\n    setLoading(false);\n  };\n\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Meal Style Preferences:</label>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n            {MEAL_STYLES.map(style => (\n              <label key={style}>\n                <input\n                  type=\"checkbox\"\n                  name=\"mealStyles\"\n                  value={style}\n                  checked={form.mealStyles.includes(style)}\n                  onChange={handleChange}\n                /> {style}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <label>Meal Planning Goal:</label>\n        <select name=\"goal\" value={form.goal} onChange={handleChange}>\n          <option value=\"\">Select a goal</option>\n          <option value=\"healthy\">Eat healthier</option>\n          <option value=\"budget\">Save time & money</option>\n          <option value=\"simple\">Just plan meals</option>\n        </select>\n\n        <label>Meals Per Day:</label>\n        <input type=\"number\" name=\"mealsPerDay\" min=\"1\" max=\"3\" value={form.mealsPerDay} onChange={handleChange} />\n\n        <label>Plan Length (days):</label>\n        <select name=\"planLength\" value={form.planLength} onChange={handleChange}>\n          {[3, 5, 7].map(num => <option key={num} value={num}>{num}</option>)}\n        </select>\n\n        <label>Budget Level:</label>\n        <select name=\"budget\" value={form.budget} onChange={handleChange}>\n          <option value=\"\">Select</option>\n          <option value=\"low\">Low</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n\n        <label>Allergies:</label>\n        <input type=\"text\" name=\"allergies\" value={form.allergies} onChange={handleChange} />\n\n        <button type=\"submit\">{loading ? \"Generating...\" : \"Generate Meal Plan\"}</button>\n      </form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {parsedPlan.days.length > 0 && (\n        <div style={{ marginTop: '30px' }}>\n          <h3>Weekly Meal Plan:</h3>\n          {parsedPlan.days.map((day, index) => (\n            <div key={index} style={{ padding: '16px', background: '#f9fafb', borderRadius: '12px', marginBottom: '12px' }}>\n              <h4>{day.title}</h4>\n              {day.meals.map((meal, i) => (\n                <div key={i}>\n                  <strong>{meal.type}: {meal.title}</strong>\n                  <ul>\n                    {meal.steps.map((step, j) => (\n                      <li key={j}>{step}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <h3>Grocery List:</h3>\n          {Object.keys(parsedPlan.groceryList).length > 0 ? (\n            <div style={{ background: '#f3f4f6', borderRadius: '12px', padding: '16px' }}>\n              {Object.keys(parsedPlan.groceryList).map((category, idx) => (\n                <div key={idx}>\n                  <strong>{category}</strong>\n                  <ul>\n                    {parsedPlan.groceryList[category].map((item, i) => <li key={i}>{item}</li>)}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p><em>No grocery list was provided.</em></p>\n          )}\n          <button onClick={handleDownload}>Download as .txt</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MealPlannerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}