{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\OneDrive\\\\Documents\\\\Projects\\\\ai-meal-planner\\\\src\\\\components\\\\MealPlannerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEAL_STYLES = [\"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\", \"Paleo\", \"Mediterranean\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Whole30\"];\nfunction MealPlannerForm() {\n  _s();\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({\n    days: [],\n    groceryList: {}\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (name === \"mealStyles\") {\n      setForm(prev => ({\n        ...prev,\n        mealStyles: checked ? [...prev.mealStyles, value] : prev.mealStyles.filter(v => v !== value)\n      }));\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const parseMealPlan = text => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n    let currentDay = null;\n    let dayTitles = new Set();\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n    lines.forEach(line => {\n      if (line.match(/^Day \\d+:?/)) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        currentDay = {\n          title: line.replace(':', ''),\n          meals: []\n        };\n      } else if (line.match(/^(Breakfast|Lunch|Dinner):/)) {\n        currentMealType = line.split(':')[0];\n        if (currentDay) {\n          currentDay.meals.push({\n            type: currentMealType,\n            title: line.split(': ')[1],\n            steps: []\n          });\n        }\n      } else if (line.startsWith('-') && !inGrocery) {\n        if (currentDay && currentDay.meals.length > 0) {\n          const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n          if (currentMeal.steps) {\n            currentMeal.steps.push(line.replace('- ', ''));\n          }\n        }\n      } else if (line === 'Grocery List:') {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        var _groceryList$currentG;\n        (_groceryList$currentG = groceryList[currentGroceryCategory]) === null || _groceryList$currentG === void 0 ? void 0 : _groceryList$currentG.push(line.replace('- ', ''));\n      }\n    });\n    if (currentDay && !dayTitles.has(currentDay.title)) {\n      days.push(currentDay);\n    }\n\n    // Truncate to requested number of days\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({\n      days: [],\n      groceryList: {}\n    });\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\nMeal style preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFollow this structure exactly:\n- Label each day with \"Day 1:\", \"Day 2:\", etc.\n- Do not repeat any day label\n- Provide exactly ${form.planLength} days\n- For each day, include only ${form.mealsPerDay} meal(s) in order using these labels: Breakfast, Lunch, Dinner (skip unused)\n- Include short bullet-point cooking steps under each meal\n- Reuse ingredients across days\n\nAt the end, generate a grocery list grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      console.log(\"RAW GPT RESPONSE:\\\\n\", data.result);\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n    setLoading(false);\n  };\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Style Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px'\n          },\n          children: MEAL_STYLES.map(style => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"mealStyles\",\n              value: style,\n              checked: form.mealStyles.includes(style),\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), style]\n          }, style, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Planning Goal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goal\",\n          value: form.goal,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"healthy\",\n            children: \"Eat healthier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"budget\",\n            children: \"Save time & money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"simple\",\n            children: \"Just plan meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meals Per Day:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"mealsPerDay\",\n          min: \"1\",\n          max: \"3\",\n          value: form.mealsPerDay,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plan Length (days):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planLength\",\n          value: form.planLength,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 5,\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 7,\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Budget Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"budget\",\n          value: form.budget,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"allergies\",\n          value: form.allergies,\n          onChange: handleChange,\n          placeholder: \"e.g., peanuts, dairy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), parsedPlan.days.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Meal Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), parsedPlan.days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          padding: '16px',\n          background: '#f9fafb',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: day.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), day.meals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [meal.type, \": \", meal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meal.steps && meal.steps.map((step, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#f3f4f6',\n          borderRadius: '12px',\n          padding: '16px'\n        },\n        children: Object.keys(parsedPlan.groceryList).map((category, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: parsedPlan.groceryList[category].map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download as .txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlannerForm, \"LwuhZSCfYn9KrLKW+ypAz+sVI5s=\");\n_c = MealPlannerForm;\nexport default MealPlannerForm;\nvar _c;\n$RefreshReg$(_c, \"MealPlannerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MEAL_STYLES","MealPlannerForm","_s","form","setForm","mealStyles","goal","mealsPerDay","planLength","budget","allergies","loading","setLoading","mealPlan","setMealPlan","error","setError","parsedPlan","setParsedPlan","days","groceryList","handleChange","e","name","value","type","checked","target","prev","filter","v","parseMealPlan","text","lines","split","map","line","trim","Boolean","currentDay","dayTitles","Set","currentMealType","inGrocery","currentGroceryCategory","forEach","match","has","title","push","add","replace","meals","steps","startsWith","length","currentMeal","endsWith","_groceryList$currentG","slice","Number","handleSubmit","preventDefault","prompt","join","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","result","parsed","err","handleDownload","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","alignItems","includes","onChange","min","max","placeholder","color","marginTop","day","index","marginBottom","padding","background","borderRadius","meal","i","step","j","Object","keys","category","idx","item","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aidan/OneDrive/Documents/Projects/ai-meal-planner/src/components/MealPlannerForm.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst MEAL_STYLES = [\n  \"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\",\n  \"Paleo\", \"Mediterranean\", \"High-Protein\",\n  \"Low-Carb\", \"Low-Fat\", \"Whole30\"\n];\n\nfunction MealPlannerForm() {\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({ days: [], groceryList: {} });\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n\n    if (name === \"mealStyles\") {\n      setForm((prev) => ({\n        ...prev,\n        mealStyles: checked\n          ? [...prev.mealStyles, value]\n          : prev.mealStyles.filter((v) => v !== value)\n      }));\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const parseMealPlan = (text) => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n\n    let currentDay = null;\n    let dayTitles = new Set();\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n\n    lines.forEach(line => {\n      if (line.match(/^Day \\d+:?/)) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        currentDay = { title: line.replace(':', ''), meals: [] };\n      } else if (line.match(/^(Breakfast|Lunch|Dinner):/)) {\n        currentMealType = line.split(':')[0];\n        if (currentDay) {\n          currentDay.meals.push({ type: currentMealType, title: line.split(': ')[1], steps: [] });\n        }\n      } else if (line.startsWith('-') && !inGrocery) {\n        if (currentDay && currentDay.meals.length > 0) {\n          const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n          if (currentMeal.steps) {\n            currentMeal.steps.push(line.replace('- ', ''));\n          }\n        }\n      } else if (line === 'Grocery List:') {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        groceryList[currentGroceryCategory]?.push(line.replace('- ', ''));\n      }\n    });\n\n    if (currentDay && !dayTitles.has(currentDay.title)) {\n      days.push(currentDay);\n    }\n\n    // Truncate to requested number of days\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({ days: [], groceryList: {} });\n\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\nMeal style preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFollow this structure exactly:\n- Label each day with \"Day 1:\", \"Day 2:\", etc.\n- Do not repeat any day label\n- Provide exactly ${form.planLength} days\n- For each day, include only ${form.mealsPerDay} meal(s) in order using these labels: Breakfast, Lunch, Dinner (skip unused)\n- Include short bullet-point cooking steps under each meal\n- Reuse ingredients across days\n\nAt the end, generate a grocery list grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt })\n      });\n\n      const data = await response.json();\n      console.log(\"RAW GPT RESPONSE:\\\\n\", data.result);\n\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n\n    setLoading(false);\n  };\n\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Meal Style Preferences:</label>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n            {MEAL_STYLES.map((style) => (\n              <label key={style} style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                <input\n                  type=\"checkbox\"\n                  name=\"mealStyles\"\n                  value={style}\n                  checked={form.mealStyles.includes(style)}\n                  onChange={handleChange}\n                />\n                {style}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meal Planning Goal:</label>\n          <select name=\"goal\" value={form.goal} onChange={handleChange}>\n            <option value=\"\">Select a goal</option>\n            <option value=\"healthy\">Eat healthier</option>\n            <option value=\"budget\">Save time & money</option>\n            <option value=\"simple\">Just plan meals</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meals Per Day:</label>\n          <input type=\"number\" name=\"mealsPerDay\" min=\"1\" max=\"3\" value={form.mealsPerDay} onChange={handleChange} />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Plan Length (days):</label>\n          <select name=\"planLength\" value={form.planLength} onChange={handleChange}>\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={7}>7</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Budget Level:</label>\n          <select name=\"budget\" value={form.budget} onChange={handleChange}>\n            <option value=\"\">Select</option>\n            <option value=\"low\">Low</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"high\">High</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Allergies:</label>\n          <input type=\"text\" name=\"allergies\" value={form.allergies} onChange={handleChange} placeholder=\"e.g., peanuts, dairy\" />\n        </div>\n\n        <button type=\"submit\">{loading ? \"Generating...\" : \"Generate Meal Plan\"}</button>\n      </form>\n\n      {error && <p style={{ color: 'red', marginTop: '20px' }}>{error}</p>}\n\n      {parsedPlan.days.length > 0 && (\n        <div style={{ marginTop: '30px' }}>\n          <h3>Weekly Meal Plan:</h3>\n          {parsedPlan.days.map((day, index) => (\n            <div key={index} style={{ marginBottom: '20px', padding: '16px', background: '#f9fafb', borderRadius: '12px' }}>\n              <h4>{day.title}</h4>\n              {day.meals.map((meal, i) => (\n                <div key={i}>\n                  <strong>{meal.type}: {meal.title}</strong>\n                  <ul>\n                    {meal.steps && meal.steps.map((step, j) => (\n                      <li key={j}>{step}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <h3>Grocery List:</h3>\n          <div style={{ background: '#f3f4f6', borderRadius: '12px', padding: '16px' }}>\n            {Object.keys(parsedPlan.groceryList).map((category, idx) => (\n              <div key={idx} style={{ marginBottom: '16px' }}>\n                <strong>{category}</strong>\n                <ul>\n                  {parsedPlan.groceryList[category].map((item, i) => (\n                    <li key={i}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n          <button onClick={handleDownload}>Download as .txt</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MealPlannerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}