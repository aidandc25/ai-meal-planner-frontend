{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\OneDrive\\\\Documents\\\\Projects\\\\ai-meal-planner\\\\src\\\\components\\\\MealPlannerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEAL_STYLES = [\"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\", \"Paleo\", \"Mediterranean\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"Whole30\"];\nconst MEAL_ORDER = [\"Breakfast\", \"Lunch\", \"Dinner\"];\nfunction MealPlannerForm() {\n  _s();\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({\n    days: [],\n    groceryList: {}\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (name === \"mealStyles\") {\n      setForm(prev => ({\n        ...prev,\n        mealStyles: checked ? [...prev.mealStyles, value] : prev.mealStyles.filter(v => v !== value)\n      }));\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const parseMealPlan = text => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n    let currentDay = null;\n    let dayTitles = new Set();\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n    lines.forEach(line => {\n      const lower = line.toLowerCase();\n      if (line.match(/^Day \\d+:?/)) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        currentDay = {\n          title: line.replace(':', ''),\n          meals: []\n        };\n      } else if (line.match(/^(Breakfast|Lunch|Dinner):/)) {\n        currentMealType = line.split(':')[0];\n        if (currentDay) {\n          currentDay.meals.push({\n            type: currentMealType,\n            title: line.split(': ')[1],\n            steps: []\n          });\n        }\n      } else if (line.startsWith('-') && !inGrocery) {\n        if (currentDay && currentDay.meals.length > 0) {\n          const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n          if (currentMeal.steps) {\n            currentMeal.steps.push(line.replace('- ', ''));\n          }\n        }\n      } else if (lower === 'grocery list:' || lower.includes('grocery list')) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        var _groceryList$currentG;\n        (_groceryList$currentG = groceryList[currentGroceryCategory]) === null || _groceryList$currentG === void 0 ? void 0 : _groceryList$currentG.push(line.replace('- ', ''));\n      }\n    });\n    if (currentDay && !dayTitles.has(currentDay.title)) {\n      days.push(currentDay);\n    }\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({\n      days: [],\n      groceryList: {}\n    });\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with up to ${form.mealsPerDay} meals per day.\nMeal style preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFor each day, label as \"Day 1:\", \"Day 2:\", etc. and include exactly ${form.mealsPerDay} meals in order (Breakfast, Lunch, Dinner).\nUse bullet points for cooking steps under each meal.\n\nAT THE END, INCLUDE A SECTION TITLED \"GROCERY LIST:\" grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n    setLoading(false);\n  };\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Style Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px'\n          },\n          children: MEAL_STYLES.map(style => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"mealStyles\",\n              value: style,\n              checked: form.mealStyles.includes(style),\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), style]\n          }, style, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Planning Goal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goal\",\n          value: form.goal,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"healthy\",\n            children: \"Eat healthier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"budget\",\n            children: \"Save time & money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"simple\",\n            children: \"Just plan meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meals Per Day:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"mealsPerDay\",\n          min: \"1\",\n          max: \"3\",\n          value: form.mealsPerDay,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plan Length (days):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planLength\",\n          value: form.planLength,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 5,\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 7,\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Budget Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"budget\",\n          value: form.budget,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"allergies\",\n          value: form.allergies,\n          onChange: handleChange,\n          placeholder: \"e.g., peanuts, dairy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this), parsedPlan.days.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Meal Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), parsedPlan.days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          padding: '16px',\n          background: '#f9fafb',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: day.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), day.meals.filter(m => MEAL_ORDER.indexOf(m.type) > -1).sort((a, b) => MEAL_ORDER.indexOf(a.type) - MEAL_ORDER.indexOf(b.type)).slice(0, form.mealsPerDay).map((meal, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [meal.type, \": \", meal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meal.steps && meal.steps.map((step, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), Object.keys(parsedPlan.groceryList).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#f3f4f6',\n          borderRadius: '12px',\n          padding: '16px'\n        },\n        children: Object.keys(parsedPlan.groceryList).map((category, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: parsedPlan.groceryList[category].map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: \"No grocery list was included.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download as .txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlannerForm, \"LwuhZSCfYn9KrLKW+ypAz+sVI5s=\");\n_c = MealPlannerForm;\nexport default MealPlannerForm;\nvar _c;\n$RefreshReg$(_c, \"MealPlannerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MEAL_STYLES","MEAL_ORDER","MealPlannerForm","_s","form","setForm","mealStyles","goal","mealsPerDay","planLength","budget","allergies","loading","setLoading","mealPlan","setMealPlan","error","setError","parsedPlan","setParsedPlan","days","groceryList","handleChange","e","name","value","type","checked","target","prev","filter","v","parseMealPlan","text","lines","split","map","line","trim","Boolean","currentDay","dayTitles","Set","currentMealType","inGrocery","currentGroceryCategory","forEach","lower","toLowerCase","match","has","title","push","add","replace","meals","steps","startsWith","length","currentMeal","includes","endsWith","_groceryList$currentG","slice","Number","handleSubmit","preventDefault","prompt","join","response","fetch","method","headers","body","JSON","stringify","data","json","result","parsed","err","console","handleDownload","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","alignItems","onChange","min","max","placeholder","color","marginTop","day","index","marginBottom","padding","background","borderRadius","m","indexOf","sort","a","b","meal","i","step","j","Object","keys","category","idx","item","fontStyle","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aidan/OneDrive/Documents/Projects/ai-meal-planner/src/components/MealPlannerForm.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst MEAL_STYLES = [\n  \"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\",\n  \"Paleo\", \"Mediterranean\", \"High-Protein\",\n  \"Low-Carb\", \"Low-Fat\", \"Whole30\"\n];\n\nconst MEAL_ORDER = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\nfunction MealPlannerForm() {\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({ days: [], groceryList: {} });\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n\n    if (name === \"mealStyles\") {\n      setForm((prev) => ({\n        ...prev,\n        mealStyles: checked\n          ? [...prev.mealStyles, value]\n          : prev.mealStyles.filter((v) => v !== value)\n      }));\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const parseMealPlan = (text) => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n\n    let currentDay = null;\n    let dayTitles = new Set();\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n\n    lines.forEach(line => {\n      const lower = line.toLowerCase();\n      if (line.match(/^Day \\d+:?/)) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        currentDay = { title: line.replace(':', ''), meals: [] };\n      } else if (line.match(/^(Breakfast|Lunch|Dinner):/)) {\n        currentMealType = line.split(':')[0];\n        if (currentDay) {\n          currentDay.meals.push({ type: currentMealType, title: line.split(': ')[1], steps: [] });\n        }\n      } else if (line.startsWith('-') && !inGrocery) {\n        if (currentDay && currentDay.meals.length > 0) {\n          const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n          if (currentMeal.steps) {\n            currentMeal.steps.push(line.replace('- ', ''));\n          }\n        }\n      } else if (lower === 'grocery list:' || lower.includes('grocery list')) {\n        if (currentDay && !dayTitles.has(currentDay.title)) {\n          days.push(currentDay);\n          dayTitles.add(currentDay.title);\n        }\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        groceryList[currentGroceryCategory]?.push(line.replace('- ', ''));\n      }\n    });\n\n    if (currentDay && !dayTitles.has(currentDay.title)) {\n      days.push(currentDay);\n    }\n\n    return {\n      days: days.slice(0, Number(form.planLength)),\n      groceryList\n    };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({ days: [], groceryList: {} });\n\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with up to ${form.mealsPerDay} meals per day.\nMeal style preferences: ${form.mealStyles.length ? form.mealStyles.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nFor each day, label as \"Day 1:\", \"Day 2:\", etc. and include exactly ${form.mealsPerDay} meals in order (Breakfast, Lunch, Dinner).\nUse bullet points for cooking steps under each meal.\n\nAT THE END, INCLUDE A SECTION TITLED \"GROCERY LIST:\" grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt })\n      });\n\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n\n    setLoading(false);\n  };\n\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Meal Style Preferences:</label>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n            {MEAL_STYLES.map((style) => (\n              <label key={style} style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                <input\n                  type=\"checkbox\"\n                  name=\"mealStyles\"\n                  value={style}\n                  checked={form.mealStyles.includes(style)}\n                  onChange={handleChange}\n                />\n                {style}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meal Planning Goal:</label>\n          <select name=\"goal\" value={form.goal} onChange={handleChange}>\n            <option value=\"\">Select a goal</option>\n            <option value=\"healthy\">Eat healthier</option>\n            <option value=\"budget\">Save time & money</option>\n            <option value=\"simple\">Just plan meals</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meals Per Day:</label>\n          <input type=\"number\" name=\"mealsPerDay\" min=\"1\" max=\"3\" value={form.mealsPerDay} onChange={handleChange} />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Plan Length (days):</label>\n          <select name=\"planLength\" value={form.planLength} onChange={handleChange}>\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={7}>7</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Budget Level:</label>\n          <select name=\"budget\" value={form.budget} onChange={handleChange}>\n            <option value=\"\">Select</option>\n            <option value=\"low\">Low</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"high\">High</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Allergies:</label>\n          <input type=\"text\" name=\"allergies\" value={form.allergies} onChange={handleChange} placeholder=\"e.g., peanuts, dairy\" />\n        </div>\n\n        <button type=\"submit\">{loading ? \"Generating...\" : \"Generate Meal Plan\"}</button>\n      </form>\n\n      {error && <p style={{ color: 'red', marginTop: '20px' }}>{error}</p>}\n\n      {parsedPlan.days.length > 0 && (\n        <div style={{ marginTop: '30px' }}>\n          <h3>Weekly Meal Plan:</h3>\n          {parsedPlan.days.map((day, index) => (\n            <div key={index} style={{ marginBottom: '20px', padding: '16px', background: '#f9fafb', borderRadius: '12px' }}>\n              <h4>{day.title}</h4>\n              {day.meals\n                .filter(m => MEAL_ORDER.indexOf(m.type) > -1)\n                .sort((a, b) => MEAL_ORDER.indexOf(a.type) - MEAL_ORDER.indexOf(b.type))\n                .slice(0, form.mealsPerDay)\n                .map((meal, i) => (\n                <div key={i}>\n                  <strong>{meal.type}: {meal.title}</strong>\n                  <ul>\n                    {meal.steps && meal.steps.map((step, j) => (\n                      <li key={j}>{step}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <h3>Grocery List:</h3>\n          {Object.keys(parsedPlan.groceryList).length > 0 ? (\n            <div style={{ background: '#f3f4f6', borderRadius: '12px', padding: '16px' }}>\n              {Object.keys(parsedPlan.groceryList).map((category, idx) => (\n                <div key={idx} style={{ marginBottom: '16px' }}>\n                  <strong>{category}</strong>\n                  <ul>\n                    {parsedPlan.groceryList[category].map((item, i) => (\n                      <li key={i}>{item}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p style={{ fontStyle: 'italic' }}>No grocery list was included.</p>\n          )}\n          <button onClick={handleDownload}>Download as .txt</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MealPlannerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}