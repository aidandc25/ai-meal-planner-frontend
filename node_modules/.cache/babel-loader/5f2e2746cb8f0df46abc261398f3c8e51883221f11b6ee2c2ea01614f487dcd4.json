{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\OneDrive\\\\Documents\\\\Projects\\\\ai-meal-planner\\\\src\\\\components\\\\MealPlannerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport './MealPlannerForm.css'; // spinner styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEAL_STYLES = [\"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\", \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"High-Carb\"];\nfunction MealPlannerForm() {\n  _s();\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({\n    days: [],\n    groceryList: {}\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    if (name === \"mealStyles\") {\n      setForm(prev => ({\n        ...prev,\n        mealStyles: checked ? [...prev.mealStyles, value] : prev.mealStyles.filter(v => v !== value)\n      }));\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setParsedPlan({\n      days: [],\n      groceryList: {}\n    });\n    try {\n      const response = await fetch(\"https://ai-meal-planner-backend.onrender.com\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          planLength: form.planLength,\n          mealsPerDay: form.mealsPerDay,\n          preferences: form.mealStyles,\n          goal: form.goal,\n          budget: form.budget,\n          allergies: form.allergies\n        })\n      });\n      const data = await response.json();\n      if (data.result) {\n        setParsedPlan(data.result);\n      } else {\n        setError(\"Something went wrong. Please try again.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Could not connect to backend.\");\n    }\n    setLoading(false);\n  };\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFont(\"Helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Weekly Meal Plan\", 15, 15);\n    let y = 25;\n    parsedPlan.days.forEach(day => {\n      doc.setFont(\"Helvetica\", \"bold\");\n      doc.text(day.day, 15, y);\n      y += 8;\n      day.meals.forEach(meal => {\n        doc.setFont(\"Helvetica\", \"normal\");\n        doc.text(`${meal.type}: ${meal.title}`, 20, y);\n        y += 7;\n        if (meal.ingredients && meal.ingredients.length) {\n          doc.setFontSize(12);\n          doc.text(`Ingredients: ${meal.ingredients.join(\", \")}`, 22, y);\n          y += 7;\n        }\n        doc.setFontSize(12);\n        meal.steps.forEach((step, i) => {\n          doc.text(`- ${step}`, 24, y);\n          y += 6;\n        });\n        y += 6;\n        if (y > 270) {\n          doc.addPage();\n          y = 20;\n        }\n      });\n    });\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.setFontSize(14);\n    doc.text(\"Grocery List\", 15, y);\n    y += 8;\n    Object.entries(parsedPlan.groceryList).forEach(([category, items]) => {\n      doc.setFont(\"Helvetica\", \"bold\");\n      doc.setFontSize(12);\n      doc.text(`${category}:`, 18, y);\n      y += 6;\n      doc.setFont(\"Helvetica\", \"normal\");\n      items.forEach(item => {\n        doc.text(`- ${item}`, 22, y);\n        y += 6;\n        if (y > 270) {\n          doc.addPage();\n          y = 20;\n        }\n      });\n    });\n    doc.save(\"meal-plan.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Style Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px'\n          },\n          children: MEAL_STYLES.map(style => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"mealStyles\",\n              value: style,\n              checked: form.mealStyles.includes(style),\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), \" \", style]\n          }, style, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Goal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"goal\",\n        value: form.goal,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"healthy\",\n          children: \"Eat healthier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"budget\",\n          children: \"Save time & money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"simple\",\n          children: \"Just plan meals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meals Per Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"mealsPerDay\",\n        min: \"1\",\n        max: \"3\",\n        value: form.mealsPerDay,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Plan Length (days):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"planLength\",\n        value: form.planLength,\n        onChange: handleChange,\n        children: [3, 5, 7].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Budget Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"budget\",\n        value: form.budget,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Allergies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"allergies\",\n        value: form.allergies,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating your plan, please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this), parsedPlan.days.length > 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Meal Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        children: \"Download as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), parsedPlan.days.map((day, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          padding: '16px',\n          background: '#f9fafb',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: day.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), day.meals.map((meal, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [meal.type, \": \", meal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), meal.ingredients && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 24\n            }, this), \" \", meal.ingredients.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meal.steps.map((step, k) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, k, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 50\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this)]\n        }, j, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), Object.entries(parsedPlan.groceryList).map(([category, items], idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlannerForm, \"JRsUo4DCCe2rdxMZpjm78YdYcsY=\");\n_c = MealPlannerForm;\nexport default MealPlannerForm;\nvar _c;\n$RefreshReg$(_c, \"MealPlannerForm\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","MEAL_STYLES","MealPlannerForm","_s","form","setForm","mealStyles","goal","mealsPerDay","planLength","budget","allergies","loading","setLoading","error","setError","parsedPlan","setParsedPlan","days","groceryList","handleChange","e","name","value","checked","target","prev","filter","v","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","preferences","data","json","result","err","console","handleDownloadPDF","doc","setFont","setFontSize","text","y","forEach","day","meals","meal","type","title","ingredients","length","join","steps","step","i","addPage","Object","entries","category","items","item","save","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","map","includes","onChange","min","max","num","marginTop","textAlign","color","onClick","marginBottom","padding","background","borderRadius","j","k","idx","_c","$RefreshReg$"],"sources":["C:/Users/aidan/OneDrive/Documents/Projects/ai-meal-planner/src/components/MealPlannerForm.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport './MealPlannerForm.css'; // spinner styles\n\nconst MEAL_STYLES = [\n  \"Vegan\", \"Vegetarian\", \"Pescatarian\", \"Keto\",\n  \"High-Protein\", \"Low-Carb\", \"Low-Fat\", \"High-Carb\"\n];\n\nfunction MealPlannerForm() {\n  const [form, setForm] = useState({\n    mealStyles: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({ days: [], groceryList: {} });\n\n  const handleChange = (e) => {\n    const { name, value, checked } = e.target;\n    if (name === \"mealStyles\") {\n      setForm((prev) => ({\n        ...prev,\n        mealStyles: checked\n          ? [...prev.mealStyles, value]\n          : prev.mealStyles.filter((v) => v !== value)\n      }));\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setParsedPlan({ days: [], groceryList: {} });\n\n    try {\n      const response = await fetch(\"https://ai-meal-planner-backend.onrender.com\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          planLength: form.planLength,\n          mealsPerDay: form.mealsPerDay,\n          preferences: form.mealStyles,\n          goal: form.goal,\n          budget: form.budget,\n          allergies: form.allergies\n        })\n      });\n\n      const data = await response.json();\n      if (data.result) {\n        setParsedPlan(data.result);\n      } else {\n        setError(\"Something went wrong. Please try again.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Could not connect to backend.\");\n    }\n    setLoading(false);\n  };\n\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFont(\"Helvetica\", \"normal\");\n    doc.setFontSize(14);\n    doc.text(\"Weekly Meal Plan\", 15, 15);\n\n    let y = 25;\n\n    parsedPlan.days.forEach((day) => {\n      doc.setFont(\"Helvetica\", \"bold\");\n      doc.text(day.day, 15, y);\n      y += 8;\n      day.meals.forEach((meal) => {\n        doc.setFont(\"Helvetica\", \"normal\");\n        doc.text(`${meal.type}: ${meal.title}`, 20, y);\n        y += 7;\n\n        if (meal.ingredients && meal.ingredients.length) {\n          doc.setFontSize(12);\n          doc.text(`Ingredients: ${meal.ingredients.join(\", \")}`, 22, y);\n          y += 7;\n        }\n\n        doc.setFontSize(12);\n        meal.steps.forEach((step, i) => {\n          doc.text(`- ${step}`, 24, y);\n          y += 6;\n        });\n        y += 6;\n        if (y > 270) {\n          doc.addPage();\n          y = 20;\n        }\n      });\n    });\n\n    doc.setFont(\"Helvetica\", \"bold\");\n    doc.setFontSize(14);\n    doc.text(\"Grocery List\", 15, y);\n    y += 8;\n\n    Object.entries(parsedPlan.groceryList).forEach(([category, items]) => {\n      doc.setFont(\"Helvetica\", \"bold\");\n      doc.setFontSize(12);\n      doc.text(`${category}:`, 18, y);\n      y += 6;\n\n      doc.setFont(\"Helvetica\", \"normal\");\n      items.forEach(item => {\n        doc.text(`- ${item}`, 22, y);\n        y += 6;\n        if (y > 270) {\n          doc.addPage();\n          y = 20;\n        }\n      });\n    });\n\n    doc.save(\"meal-plan.pdf\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Meal Style Preferences:</label>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n            {MEAL_STYLES.map(style => (\n              <label key={style}>\n                <input\n                  type=\"checkbox\"\n                  name=\"mealStyles\"\n                  value={style}\n                  checked={form.mealStyles.includes(style)}\n                  onChange={handleChange}\n                /> {style}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <label>Goal:</label>\n        <select name=\"goal\" value={form.goal} onChange={handleChange}>\n          <option value=\"\">Select a goal</option>\n          <option value=\"healthy\">Eat healthier</option>\n          <option value=\"budget\">Save time & money</option>\n          <option value=\"simple\">Just plan meals</option>\n        </select>\n\n        <label>Meals Per Day:</label>\n        <input type=\"number\" name=\"mealsPerDay\" min=\"1\" max=\"3\" value={form.mealsPerDay} onChange={handleChange} />\n\n        <label>Plan Length (days):</label>\n        <select name=\"planLength\" value={form.planLength} onChange={handleChange}>\n          {[3, 5, 7].map(num => <option key={num} value={num}>{num}</option>)}\n        </select>\n\n        <label>Budget Level:</label>\n        <select name=\"budget\" value={form.budget} onChange={handleChange}>\n          <option value=\"\">Select</option>\n          <option value=\"low\">Low</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n\n        <label>Allergies:</label>\n        <input type=\"text\" name=\"allergies\" value={form.allergies} onChange={handleChange} />\n\n        <button type=\"submit\">{loading ? \"Generating...\" : \"Generate Meal Plan\"}</button>\n      </form>\n\n      {loading && (\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          <div className=\"spinner\" />\n          <p>Generating your plan, please wait...</p>\n        </div>\n      )}\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {parsedPlan.days.length > 0 && !loading && (\n        <div>\n          <h3>Meal Plan:</h3>\n          <button onClick={handleDownloadPDF}>Download as PDF</button>\n          {parsedPlan.days.map((day, i) => (\n            <div key={i} style={{ marginBottom: '20px', padding: '16px', background: '#f9fafb', borderRadius: '12px' }}>\n              <h4>{day.day}</h4>\n              {day.meals.map((meal, j) => (\n                <div key={j}>\n                  <strong>{meal.type}: {meal.title}</strong>\n                  {meal.ingredients && (\n                    <p><em>Ingredients:</em> {meal.ingredients.join(', ')}</p>\n                  )}\n                  <ul>\n                    {meal.steps.map((step, k) => <li key={k}>{step}</li>)}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <h3>Grocery List:</h3>\n          {Object.entries(parsedPlan.groceryList).map(([category, items], idx) => (\n            <div key={idx}>\n              <strong>{category}</strong>\n              <ul>{items.map((item, i) => <li key={i}>{item}</li>)}</ul>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MealPlannerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}