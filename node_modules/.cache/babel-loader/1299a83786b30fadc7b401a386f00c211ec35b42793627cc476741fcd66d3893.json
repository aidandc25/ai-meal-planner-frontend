{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\OneDrive\\\\Documents\\\\Projects\\\\ai-meal-planner\\\\src\\\\components\\\\MealPlannerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MealPlannerForm() {\n  _s();\n  const [form, setForm] = useState({\n    diet: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({\n    days: [],\n    groceryList: {}\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      selectedOptions\n    } = e.target;\n    if (type === 'select-multiple') {\n      const values = Array.from(selectedOptions, option => option.value);\n      setForm({\n        ...form,\n        [name]: values\n      });\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const parseMealPlan = text => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n    let currentDay = null;\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n    lines.forEach(line => {\n      if (line.startsWith('Day')) {\n        if (currentDay) days.push(currentDay);\n        currentDay = {\n          title: line,\n          meals: []\n        };\n      } else if (line.startsWith('Breakfast:') || line.startsWith('Lunch:') || line.startsWith('Dinner:')) {\n        currentMealType = line.split(':')[0];\n        currentDay.meals.push({\n          type: currentMealType,\n          title: line.split(': ')[1],\n          steps: []\n        });\n      } else if (line.startsWith('-') && !inGrocery) {\n        const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n        currentMeal.steps.push(line.replace('- ', ''));\n      } else if (line === 'Grocery List:') {\n        if (currentDay) days.push(currentDay);\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        groceryList[currentGroceryCategory].push(line.replace('- ', ''));\n      }\n    });\n    return {\n      days,\n      groceryList\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({\n      days: [],\n      groceryList: {}\n    });\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\nDietary preferences: ${form.diet.length ? form.diet.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nEach day should include:\n- Meal names and short descriptions\n- Simple bullet-point cooking steps\n- Ingredient reuse across days to save money\n\nAt the end, generate a grocery list grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n    setLoading(false);\n  };\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dietary Preferences:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"diet\",\n          multiple: true,\n          value: form.diet,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Vegetarian\",\n            children: \"Vegetarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Vegan\",\n            children: \"Vegan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Gluten-Free\",\n            children: \"Gluten-Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low-Carb\",\n            children: \"Low-Carb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High-Protein\",\n            children: \"High-Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dairy-Free\",\n            children: \"Dairy-Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pescatarian\",\n            children: \"Pescatarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Nut-Free\",\n            children: \"Nut-Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Soy-Free\",\n            children: \"Soy-Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Planning Goal:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goal\",\n          value: form.goal,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"healthy\",\n            children: \"Eat healthier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"budget\",\n            children: \"Save time & money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"simple\",\n            children: \"Just plan meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meals Per Day:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"mealsPerDay\",\n          min: \"1\",\n          max: \"3\",\n          value: form.mealsPerDay,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plan Length (days):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planLength\",\n          value: form.planLength,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 5,\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 7,\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Budget Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"budget\",\n          value: form.budget,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allergies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"allergies\",\n          value: form.allergies,\n          onChange: handleChange,\n          placeholder: \"e.g., peanuts, dairy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: loading ? \"Generating...\" : \"Generate Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), parsedPlan.days.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Meal Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), parsedPlan.days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          padding: '16px',\n          background: '#f9fafb',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: day.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), day.meals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [meal.type, \": \", meal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: meal.steps.map((step, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#f3f4f6',\n          borderRadius: '12px',\n          padding: '16px'\n        },\n        children: Object.keys(parsedPlan.groceryList).map((category, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: parsedPlan.groceryList[category].map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download as .txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlannerForm, \"c0KRncMrgtLStoR0qt1S/KIHGCg=\");\n_c = MealPlannerForm;\nexport default MealPlannerForm;\nvar _c;\n$RefreshReg$(_c, \"MealPlannerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MealPlannerForm","_s","form","setForm","diet","goal","mealsPerDay","planLength","budget","allergies","loading","setLoading","mealPlan","setMealPlan","error","setError","parsedPlan","setParsedPlan","days","groceryList","handleChange","e","name","value","type","selectedOptions","target","values","Array","from","option","parseMealPlan","text","lines","split","map","line","trim","filter","Boolean","currentDay","currentMealType","inGrocery","currentGroceryCategory","forEach","startsWith","push","title","meals","steps","currentMeal","length","replace","endsWith","handleSubmit","preventDefault","prompt","join","response","fetch","method","headers","body","JSON","stringify","data","json","result","parsed","err","console","handleDownload","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","multiple","onChange","min","max","placeholder","style","color","marginTop","day","index","marginBottom","padding","background","borderRadius","meal","i","step","j","Object","keys","category","idx","item","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aidan/OneDrive/Documents/Projects/ai-meal-planner/src/components/MealPlannerForm.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction MealPlannerForm() {\n  const [form, setForm] = useState({\n    diet: [],\n    goal: '',\n    mealsPerDay: 3,\n    planLength: 7,\n    budget: '',\n    allergies: ''\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [mealPlan, setMealPlan] = useState('');\n  const [error, setError] = useState('');\n  const [parsedPlan, setParsedPlan] = useState({ days: [], groceryList: {} });\n\n  const handleChange = (e) => {\n    const { name, value, type, selectedOptions } = e.target;\n    if (type === 'select-multiple') {\n      const values = Array.from(selectedOptions, option => option.value);\n      setForm({ ...form, [name]: values });\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const parseMealPlan = (text) => {\n    const days = [];\n    const groceryList = {};\n    const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n\n    let currentDay = null;\n    let currentMealType = '';\n    let inGrocery = false;\n    let currentGroceryCategory = '';\n\n    lines.forEach(line => {\n      if (line.startsWith('Day')) {\n        if (currentDay) days.push(currentDay);\n        currentDay = { title: line, meals: [] };\n      } else if (line.startsWith('Breakfast:') || line.startsWith('Lunch:') || line.startsWith('Dinner:')) {\n        currentMealType = line.split(':')[0];\n        currentDay.meals.push({ type: currentMealType, title: line.split(': ')[1], steps: [] });\n      } else if (line.startsWith('-') && !inGrocery) {\n        const currentMeal = currentDay.meals[currentDay.meals.length - 1];\n        currentMeal.steps.push(line.replace('- ', ''));\n      } else if (line === 'Grocery List:') {\n        if (currentDay) days.push(currentDay);\n        inGrocery = true;\n      } else if (inGrocery && line.endsWith(':')) {\n        currentGroceryCategory = line.replace(':', '');\n        groceryList[currentGroceryCategory] = [];\n      } else if (inGrocery && line.startsWith('-')) {\n        groceryList[currentGroceryCategory].push(line.replace('- ', ''));\n      }\n    });\n\n    return { days, groceryList };\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMealPlan('');\n    setError('');\n    setParsedPlan({ days: [], groceryList: {} });\n\n    const prompt = `\nYou are a meal planner AI. Create a ${form.planLength}-day meal plan with ${form.mealsPerDay} meals per day.\nDietary preferences: ${form.diet.length ? form.diet.join(', ') : 'None'}\nGoal: ${form.goal}\nBudget level: ${form.budget}\nAllergies: ${form.allergies || 'None'}\n\nEach day should include:\n- Meal names and short descriptions\n- Simple bullet-point cooking steps\n- Ingredient reuse across days to save money\n\nAt the end, generate a grocery list grouped by category (Produce, Grains, Protein, Spices, Other).\n`;\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/mealplan\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt })\n      });\n\n      const data = await response.json();\n      if (data.result) {\n        setMealPlan(data.result);\n        const parsed = parseMealPlan(data.result);\n        setParsedPlan(parsed);\n      } else {\n        setError(\"Something went wrong. Please try again or check your server.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Error connecting to backend.\");\n    }\n\n    setLoading(false);\n  };\n\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([mealPlan], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = \"meal-plan.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Dietary Preferences:</label>\n          <select name=\"diet\" multiple value={form.diet} onChange={handleChange}>\n            <option value=\"Vegetarian\">Vegetarian</option>\n            <option value=\"Vegan\">Vegan</option>\n            <option value=\"Gluten-Free\">Gluten-Free</option>\n            <option value=\"Low-Carb\">Low-Carb</option>\n            <option value=\"High-Protein\">High-Protein</option>\n            <option value=\"Dairy-Free\">Dairy-Free</option>\n            <option value=\"Pescatarian\">Pescatarian</option>\n            <option value=\"Nut-Free\">Nut-Free</option>\n            <option value=\"Soy-Free\">Soy-Free</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meal Planning Goal:</label>\n          <select name=\"goal\" value={form.goal} onChange={handleChange}>\n            <option value=\"\">Select a goal</option>\n            <option value=\"healthy\">Eat healthier</option>\n            <option value=\"budget\">Save time & money</option>\n            <option value=\"simple\">Just plan meals</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Meals Per Day:</label>\n          <input type=\"number\" name=\"mealsPerDay\" min=\"1\" max=\"3\" value={form.mealsPerDay} onChange={handleChange} />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Plan Length (days):</label>\n          <select name=\"planLength\" value={form.planLength} onChange={handleChange}>\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={7}>7</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Budget Level:</label>\n          <select name=\"budget\" value={form.budget} onChange={handleChange}>\n            <option value=\"\">Select</option>\n            <option value=\"low\">Low</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"high\">High</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Allergies:</label>\n          <input type=\"text\" name=\"allergies\" value={form.allergies} onChange={handleChange} placeholder=\"e.g., peanuts, dairy\" />\n        </div>\n\n        <button type=\"submit\">{loading ? \"Generating...\" : \"Generate Meal Plan\"}</button>\n      </form>\n\n      {error && <p style={{ color: 'red', marginTop: '20px' }}>{error}</p>}\n\n      {parsedPlan.days.length > 0 && (\n        <div style={{ marginTop: '30px' }}>\n          <h3>Weekly Meal Plan:</h3>\n          {parsedPlan.days.map((day, index) => (\n            <div key={index} style={{ marginBottom: '20px', padding: '16px', background: '#f9fafb', borderRadius: '12px' }}>\n              <h4>{day.title}</h4>\n              {day.meals.map((meal, i) => (\n                <div key={i}>\n                  <strong>{meal.type}: {meal.title}</strong>\n                  <ul>\n                    {meal.steps.map((step, j) => (\n                      <li key={j}>{step}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ))}\n\n          <h3>Grocery List:</h3>\n          <div style={{ background: '#f3f4f6', borderRadius: '12px', padding: '16px' }}>\n            {Object.keys(parsedPlan.groceryList).map((category, idx) => (\n              <div key={idx} style={{ marginBottom: '16px' }}>\n                <strong>{category}</strong>\n                <ul>\n                  {parsedPlan.groceryList[category].map((item, i) => (\n                    <li key={i}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n          <button onClick={handleDownload}>Download as .txt</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MealPlannerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}